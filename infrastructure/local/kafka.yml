version: '3.9'

x-common:
  &common
  env_file:
    - ./.env
  platform: linux/amd64

services:
  broker1:
    <<: *common
    image: confluentinc/cp-kafka:${CONF_VERSION}
    hostname: broker1
    container_name: broker1
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - 19092:19092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181,zookeeper2:2181,zookeeper3:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker1:9092,PLAINTEXT_HOST://localhost:19092"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_CONFLUENT_BALANCER_ENABLE: "true"
      KAFKA_REPLICA_SELECTOR_CLASS: "org.apache.kafka.common.replica.RackAwareReplicaSelector"
      KAFKA_CONFLUENT_BALANCER_HEAL_UNEVEN_LOAD_TRIGGER: "ANY_UNEVEN_LOAD"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,JMX:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_BROKER_RACK: 'zone1'
#      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "broker1:9092"
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
#      CONFLUENT_METRICS_REPORTER_MAX_REQUEST_SIZE: 10485760
#      # To avoid race condition with control-center
#      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: "false"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    networks:
      - ${GLOBAL_NETWORK:-services}

  broker2:
    <<: *common
    image: confluentinc/cp-kafka:${CONF_VERSION}
    hostname: broker2
    container_name: broker2
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - 19093:19093
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181,zookeeper2:2181,zookeeper3:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker2:9092,PLAINTEXT_HOST://localhost:19093"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_CONFLUENT_BALANCER_ENABLE: "true"
      KAFKA_CONFLUENT_BALANCER_HEAL_UNEVEN_LOAD_TRIGGER: "ANY_UNEVEN_LOAD"
      KAFKA_REPLICA_SELECTOR_CLASS: "org.apache.kafka.common.replica.RackAwareReplicaSelector"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_BROKER_RACK: 'zone1'
#      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "broker2:9092"
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
#      CONFLUENT_METRICS_REPORTER_MAX_REQUEST_SIZE: 10485760
#      # To avoid race condition with control-center
#      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: "false"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    networks:
      - ${GLOBAL_NETWORK:-services}

  broker3:
    <<: *common
    image: confluentinc/cp-kafka:${CONF_VERSION}
    hostname: broker3
    container_name: broker3
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - 19094:19094
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181,zookeeper2:2181,zookeeper3:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker3:9092,PLAINTEXT_HOST://localhost:19094"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_CONFLUENT_BALANCER_ENABLE: "true"
      KAFKA_CONFLUENT_BALANCER_HEAL_UNEVEN_LOAD_TRIGGER: "ANY_UNEVEN_LOAD"
      KAFKA_REPLICA_SELECTOR_CLASS: "org.apache.kafka.common.replica.RackAwareReplicaSelector"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_BROKER_RACK: 'zone1'
#      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "broker3:9092"
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
#      CONFLUENT_METRICS_REPORTER_MAX_REQUEST_SIZE: 10485760
#      # To avoid race condition with control-center
#      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: "false"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    networks:
      - ${GLOBAL_NETWORK:-services}